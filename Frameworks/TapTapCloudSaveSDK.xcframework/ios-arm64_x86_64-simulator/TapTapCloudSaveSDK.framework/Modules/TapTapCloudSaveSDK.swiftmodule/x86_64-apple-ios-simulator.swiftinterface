// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name TapTapCloudSaveSDK
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1.2
import Foundation
import Swift
import TapTapBasicToolsSDK
import TapTapCoreSDK
import TapTapLoginSDK
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc public protocol TapTapCloudSaveCallback : ObjectiveC.NSObjectProtocol {
  @objc func onResult(_ resultCode: Swift.Int)
}
extension TapTapCloudSaveSDK.TapTapCloudSaveCallback {
  public func onResult(_ resultCode: Swift.Int)
}
@objc public class CloudSaveToken : ObjectiveC.NSObject, Swift.Codable, Foundation.NSCoding, Foundation.NSSecureCoding {
  @objc public var kid: Swift.String
  @objc public var key: Swift.String
  @objc public static var supportsSecureCoding: Swift.Bool {
    @objc get
  }
  @objc public init(kid: Swift.String, key: Swift.String)
  @objc required public init?(coder: Foundation.NSCoder)
  @objc public func encode(with coder: Foundation.NSCoder)
  @objc public func toJSONString() -> Swift.String
  @objc public func toDictionary() -> [Swift.String : Any]
  @objc public static func from(jsonString: Swift.String) -> TapTapCloudSaveSDK.CloudSaveToken?
  @objc public static func from(dictionary: [Swift.String : Any]) -> TapTapCloudSaveSDK.CloudSaveToken?
  @objc public var isValid: Swift.Bool {
    @objc get
  }
  @objc public static var current: TapTapCloudSaveSDK.CloudSaveToken? {
    @objc get
    @objc set
  }
  @objc public static func clearCurrent()
  @objc override dynamic public var description: Swift.String {
    @objc get
  }
  @objc override dynamic public var debugDescription: Swift.String {
    @objc get
  }
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
  required public init(from decoder: any Swift.Decoder) throws
}
@objc public protocol TapTapCloudSaveRequestCallback : ObjectiveC.NSObjectProtocol {
  @objc func onArchiveCreated(archive: TapTapCloudSaveSDK.ArchiveData)
  @objc func onArchiveUpdated(archive: TapTapCloudSaveSDK.ArchiveData)
  @objc func onArchiveDeleted(archive: TapTapCloudSaveSDK.ArchiveData)
  @objc func onArchiveListResult(archives: [TapTapCloudSaveSDK.ArchiveData])
  @objc func onArchiveDataResult(archiveUUID: Swift.String, archiveFileID: Swift.String, data: Foundation.Data)
  @objc func onArchiveCoverResult(archiveUUID: Swift.String, archiveFileID: Swift.String, coverData: Foundation.Data)
  @objc func onRequestError(errorCode: Swift.Int, errorMessage: Swift.String)
}
extension TapTapCloudSaveSDK.TapTapCloudSaveRequestCallback {
  public func onArchiveCreated(archive: TapTapCloudSaveSDK.ArchiveData)
  public func onArchiveUpdated(archive: TapTapCloudSaveSDK.ArchiveData)
  public func onArchiveDeleted(archive: TapTapCloudSaveSDK.ArchiveData)
  public func onArchiveListResult(archives: [TapTapCloudSaveSDK.ArchiveData])
  public func onArchiveDataResult(archiveUUID: Swift.String, archiveFileID: Swift.String, data: Foundation.Data)
  public func onArchiveCoverResult(archiveUUID: Swift.String, archiveFileID: Swift.String, coverData: Foundation.Data)
  public func onRequestError(errorCode: Swift.Int, errorMessage: Swift.String)
}
@_inheritsConvenienceInitializers @objc public class ArchiveMetadata : ObjectiveC.NSObject, Swift.Codable, Foundation.NSCoding, Foundation.NSSecureCoding {
  @objc public var name: Swift.String
  @objc public var summary: Swift.String
  @objc public var extra: Swift.String
  @objc public var playtime: Swift.Int64
  @objc public static var supportsSecureCoding: Swift.Bool {
    @objc get
  }
  @objc override dynamic public init()
  @objc public init(name: Swift.String, summary: Swift.String, extra: Swift.String, playtime: Swift.Int64)
  @objc required public init?(coder: Foundation.NSCoder)
  @objc public func encode(with coder: Foundation.NSCoder)
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
  required public init(from decoder: any Swift.Decoder) throws
}
@_inheritsConvenienceInitializers @objc public class ArchiveData : ObjectiveC.NSObject, Swift.Codable, Foundation.NSCoding, Foundation.NSSecureCoding {
  @objc public var uuid: Swift.String
  @objc public var name: Swift.String
  @objc public var summary: Swift.String
  @objc public var extra: Swift.String
  @objc public var playtime: Swift.Int64
  @objc public var saveSize: Swift.Int64
  @objc public var coverSize: Swift.Int64
  @objc public var fileId: Swift.String
  @objc public var createdAt: Swift.Int64
  @objc public var updatedAt: Swift.Int64
  @objc public static var supportsSecureCoding: Swift.Bool {
    @objc get
  }
  @objc override dynamic public init()
  @objc public init(uuid: Swift.String, name: Swift.String, summary: Swift.String, extra: Swift.String, playtime: Swift.Int64, saveSize: Swift.Int64, coverSize: Swift.Int64, fileId: Swift.String, createdAt: Swift.Int64, updatedAt: Swift.Int64)
  @objc required public init?(coder: Foundation.NSCoder)
  @objc public func encode(with coder: Foundation.NSCoder)
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
  required public init(from decoder: any Swift.Decoder) throws
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objcMembers final public class TapTapCloudSave : ObjectiveC.NSObject {
  @objc public static let shared: TapTapCloudSaveSDK.TapTapCloudSave
  @objc public static func registerCloudSaveCallback(_ callback: any TapTapCloudSaveSDK.TapTapCloudSaveCallback)
  @objc public static func unregisterCloudSaveCallback(_ callback: any TapTapCloudSaveSDK.TapTapCloudSaveCallback)
  @objc public static func createArchive(archiveMetadata: TapTapCloudSaveSDK.ArchiveMetadata, archiveFilePath: Swift.String, archiveCoverPath: Swift.String?, callback: any TapTapCloudSaveSDK.TapTapCloudSaveRequestCallback)
  @objc public static func updateArchive(archiveUUID: Swift.String, archiveMetadata: TapTapCloudSaveSDK.ArchiveMetadata, archiveFilePath: Swift.String, archiveCoverPath: Swift.String?, callback: any TapTapCloudSaveSDK.TapTapCloudSaveRequestCallback)
  @objc public static func deleteArchive(archiveUUID: Swift.String, callback: any TapTapCloudSaveSDK.TapTapCloudSaveRequestCallback)
  @objc public static func getArchiveList(callback: any TapTapCloudSaveSDK.TapTapCloudSaveRequestCallback)
  @objc public static func getArchiveData(archiveUUID: Swift.String, archiveFileID: Swift.String, callback: any TapTapCloudSaveSDK.TapTapCloudSaveRequestCallback)
  @objc public static func getArchiveCover(archiveUUID: Swift.String, archiveFileID: Swift.String, callback: any TapTapCloudSaveSDK.TapTapCloudSaveRequestCallback)
  @objc public static func ensureInitialization()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class TapCloudSaveResultCode : ObjectiveC.NSObject {
  @objc public static let SUCCESS: Swift.Int
  @objc public static let ERROR_UNKNOWN: Swift.Int
  @objc public static let NEED_LOGIN: Swift.Int
  @objc public static let INIT_FAIL: Swift.Int
  @objc public static func isSuccess(_ code: Swift.Int) -> Swift.Bool
  @objc public static func isError(_ code: Swift.Int) -> Swift.Bool
  @objc override dynamic public init()
  @objc deinit
}
