// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios17.4-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name TapTapShareSDK
import Foundation
import Swift
import TapTapBasicToolsSDK
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc public class TapTapShare : ObjectiveC.NSObject {
  @objc public static func share(_ obj: TapTapShareSDK.TapTapShareObj, completion: @escaping (Swift.Int) -> Swift.Void)
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class TapTapShareObj : ObjectiveC.NSObject, Swift.Codable, Foundation.NSCoding, Foundation.NSSecureCoding {
  @objc public var title: Swift.String?
  @objc public var contents: Swift.String?
  @objc public var groupLabelId: Swift.String?
  @objc public var hashtagIds: Swift.String?
  @objc public var footerImages: [Foundation.Data]?
  @objc public var failUrl: Swift.String?
  @objc public var backUrl: Swift.String?
  @objc public static var supportsSecureCoding: Swift.Bool {
    @objc get
  }
  @objc override dynamic public init()
  @objc public init(title: Swift.String? = nil, contents: Swift.String? = nil, groupLabelId: Swift.String? = nil, hashtagIds: Swift.String? = nil, footerImages: [Foundation.Data]? = nil, failUrl: Swift.String? = nil, backUrl: Swift.String? = nil)
  @objc required public init?(coder: Foundation.NSCoder)
  @objc public func encode(with coder: Foundation.NSCoder)
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
  required public init(from decoder: any Swift.Decoder) throws
}
